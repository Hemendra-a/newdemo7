<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-A020C06" failures="2" tests="22" name="Test" time="1.533" errors="0" timestamp="2022-12-13T01:51:20 IST">
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.98">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable must be set by the webdriver.edge.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/MicrosoftWebDriver. The latest version can be downloaded from http://go.microsoft.com/fwlink/?LinkId=619687">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.edge.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/MicrosoftWebDriver. The latest version can be downloaded from http://go.microsoft.com/fwlink/?LinkId=619687
at com.google.common.base.Preconditions.checkState(Preconditions.java:847)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:134)
at org.openqa.selenium.edge.EdgeDriverService.access$000(EdgeDriverService.java:37)
at org.openqa.selenium.edge.EdgeDriverService$Builder.findDefaultExecutable(EdgeDriverService.java:90)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.edge.EdgeDriverService.createDefaultService(EdgeDriverService.java:70)
at org.openqa.selenium.edge.EdgeDriver.<init>(EdgeDriver.java:96)
at baselibrary.Baselibrary.getLaunchUrl(Baselibrary.java:20)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="baselibrary.Baselibrary" name="@BeforeMethod getLaunchUrl" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod getLaunchUrl -->
  <testcase classname="test.Login_test" name="@AfterTest teardown" time="0.004">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;org.openqa.selenium.WebDriver.quit()&amp;quot; because &amp;quot;test.Login_test.driver&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "test.Login_test.driver" is null
at test.Login_test.teardown(Login_test.java:106)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @AfterTest teardown -->
  <testcase classname="test.Login_test" name="getVerifyTitle" time="0.0">
    <skipped/>
  </testcase> <!-- getVerifyTitle -->
  <testcase classname="baselibrary.Baselibrary" name="verifygettitle" time="0.0">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [verifygettitle] with [class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [verifygettitle] with [class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- verifygettitle -->
  <testcase classname="test.Login_test" name="clickonsign" time="0.001">
    <skipped/>
  </testcase> <!-- clickonsign -->
  <testcase classname="test.Login_test" name="sendusername" time="0.001">
    <skipped/>
  </testcase> <!-- sendusername -->
  <testcase classname="test.Login_test" name="sendpassword" time="0.0">
    <skipped/>
  </testcase> <!-- sendpassword -->
  <testcase classname="test.Login_test" name="clickonsigninbutton" time="0.0">
    <skipped/>
  </testcase> <!-- clickonsigninbutton -->
  <testcase classname="test.Login_test" name="clickonnewbutton" time="0.0">
    <skipped/>
  </testcase> <!-- clickonnewbutton -->
  <testcase classname="test.Login_test" name="Createrepo" time="0.001">
    <skipped/>
  </testcase> <!-- Createrepo -->
  <testcase classname="test.Login_test" name="clickonissue" time="0.0">
    <skipped/>
  </testcase> <!-- clickonissue -->
  <testcase classname="test.Login_test" name="clickonnewissue" time="0.0">
    <skipped/>
  </testcase> <!-- clickonnewissue -->
  <testcase classname="test.Login_test" name="createnewissue" time="0.0">
    <skipped/>
  </testcase> <!-- createnewissue -->
  <testcase classname="test.Login_test" name="clickonnewissue1" time="0.0">
    <skipped/>
  </testcase> <!-- clickonnewissue1 -->
  <testcase classname="test.Login_test" name="createnewissue1" time="0.0">
    <skipped/>
  </testcase> <!-- createnewissue1 -->
  <testcase classname="test.Login_test" name="Addcomments" time="0.0">
    <skipped/>
  </testcase> <!-- Addcomments -->
  <testcase classname="test.Login_test" name="verifynewlink" time="0.0">
    <skipped/>
  </testcase> <!-- verifynewlink -->
  <testcase classname="test.Login_test" name="clickonsetting" time="0.0">
    <skipped/>
  </testcase> <!-- clickonsetting -->
  <testcase classname="test.Login_test" name="clickondeleterepo" time="0.0">
    <skipped/>
  </testcase> <!-- clickondeleterepo -->
  <testcase classname="test.Login_test" name="clickondeleterepobutton" time="0.0">
    <skipped/>
  </testcase> <!-- clickondeleterepobutton -->
  <testcase classname="test.Login_test" name="getsuccesfullmsg" time="0.0">
    <skipped/>
  </testcase> <!-- getsuccesfullmsg -->
  <testcase classname="test.Login_test" name="clickonHomebutton" time="0.0">
    <skipped/>
  </testcase> <!-- clickonHomebutton -->
  <testcase classname="test.Login_test" name="GetverifyRepo" time="0.0">
    <skipped/>
  </testcase> <!-- GetverifyRepo -->
  <testcase classname="baselibrary.Baselibrary" name="verifygettitle" time="0.0">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [verifygettitle] with [class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [verifygettitle] with [class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- verifygettitle -->
</testsuite> <!-- Test -->
